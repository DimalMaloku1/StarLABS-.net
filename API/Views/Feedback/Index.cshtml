@using Application.DTOs
@model IEnumerable<FeedbackDto>

@{
    ViewData["Title"] = "Feedback List";
    var averageRating = ViewBag.AverageRating; // Retrieve the average rating from ViewBag
}

<div class="crudIndex">
    <div class="buttons-title">
        <h3>Feedback</h3>
        <a asp-controller="Feedback" asp-action="Create" class="btn btn-success"><span class="material-icons">add_circle</span> Give Feedback</a>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>User</th>
                <th>Comment</th>
                <th>Rating</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.User.UserName)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td class="align-middle">
                        <a class="btn btn-outline-primary" asp-controller="Feedback" asp-action="Edit" asp-route-id="@item.Id"><span class="material-icons">edit</span></a>
                        <a class="btn btn-outline-info" asp-controller="Feedback" asp-action="Details" asp-route-id="@item.Id"><span class="material-icons">info</span></a>
                        <a class="btn btn-danger" asp-controller="Feedback" asp-action="Delete" asp-route-id="@item.Id"><span class="material-icons">delete</span></a>
                    </td>

                </tr>
            }
        </tbody>

    </table>
</div>

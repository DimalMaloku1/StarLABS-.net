@using Application.DTOs
@model List<BookingChartDto>
@{
    var bookingCountByMonth = Model
        .GroupBy(data => data.BookingDate.Month)
        .Select(group => new { Month = group.Key, Count = group.Count() })
        .ToList();

    string[] monthNames = new string[12] {
        "January", "February", "March", "April", "May", "June", "July",
        "August", "September", "October", "November", "December"
    };

    int[] bookingCount = new int[12];
    foreach (var item in bookingCountByMonth)
    {
        bookingCount[item.Month - 1] = item.Count;
    }
}

<div style="width:900px;height:800px" class="px-4">
    <h3>Bookings by month</h3>
    <div style="width: 100%; height: 100%;">
        
        <canvas id="bookingChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let JsMonthNames = [];
    @foreach (string name in monthNames)
    {
        @:JsMonthNames.push("@name");
    }

        document.addEventListener('DOMContentLoaded', function () {
            console.log("Registration Counts:", [@Html.Raw(string.Join(",", bookingCount))]);
            const ctx = document.getElementById('bookingChart').getContext('2d');
            const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: JsMonthNames,
                    datasets: [{
                        label: 'Bookings By Month',
                        data: [@Html.Raw(string.Join(",", bookingCount))],
                        backgroundColor: 'rgba(54, 162, 235, 0.5)', // Adjust color as needed
                        borderColor: 'rgba(54, 162, 235, 1)', // Adjust color as needed
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            },
                            ticks: {
                                autoSkip: false,
                                maxRotation: 0,
                                minRotation: 0
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Count'
                            },
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
        });
</script>
